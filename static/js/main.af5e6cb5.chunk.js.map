{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["generateSeq","choices","length","Array","Math","choice","CardMemoryGame","colors","number","isSelected","lastSelected","solved","areSameColor","this","state","first","handleClick","prevState","cardIndex","render","className","styles","style","height","props","width","size","map","color","key","index","shown","React","Card","tapped","startFlip","setTimeout","margin","onClick","background","Component","App","ReactDOM","document","getElementById"],"mappings":"sgBAKMA,EAAc,SAACC,EAASC,GAAV,MAClB,UAAIC,MAAJ,SAAuB,mBAHV,SAACF,GAAD,OAAaA,EAAQG,WAAWA,cAAgBH,EAAhD,SAGiBI,CAAP,OAEZC,EAAb,YACE,cAAmB,MAGbC,GAFJ,wBAEa,MAAb,OACIC,EAAS,QAAb,OAJiB,OAMjB,QAAa,CACXD,OAAQP,EAAYO,EADT,GAEXE,YAFW,EAGXC,aAHW,EAIXC,OAAQ,IAGV,cAAmB,qBAAnB,IACA,eAAoB,sBAApB,IAdiB,EADrB,+CAkBEC,cACE,OAAOC,KAAKC,MAAMP,OAAOQ,IAAUF,KAAKC,MAAMP,OAA9C,IAnBJ,cAsBES,YAEIH,KAAKC,MAAML,YACXI,KAAKD,aAAaC,KAAKC,MAAvB,aAFF,IAIED,KAAA,UAAc,kBAAgB,CAC5BF,OAAQM,gBAAwB,CAACA,EAAD,aAAxBA,QAIZJ,KAAA,UAAc,kBAAgB,CAC5BJ,YAAaQ,EADe,WAE5BP,aAAcQ,OAlCpB,SAsCEC,WAAS,WACP,OACE,yBACEC,UAAWC,EACXC,MAAO,CAAEC,OAAQV,KAAKW,MAAf,KAA2BC,MAAOZ,KAAKW,MAAME,OAEnDb,KAAKC,MAAMP,OAAOoB,KAAI,qBACrB,qBACEC,MADF,EAEEC,IAFF,EAGEC,MAHF,EAIEJ,KAAM,aAAkBtB,UAAU,QAJpC,QAKE2B,MACE,4BACC,oBAAyB,sBAP9B,EASEf,YAAa,EAAKA,mBAtD9B,GAAoCgB,IAApC,WA8DMC,cACJ,cAAmB,aACjB,wBACA,MAAa,CAAEC,QAAQ,GAEvB,YAAiB,mBAAjB,IAJiB,E,kCAOnBC,qBAAY,WACVtB,KAAA,SAAc,CAAEqB,QAAQ,IACxBE,YAAW,WACT,WAAc,CAAEF,QAAQ,IACxB,oBAAuB,QAAvB,SAFFE,O,EAMFjB,kBACE,IAEIO,EAAyB,IAAlBb,KAAKW,MAAME,KAClBW,EAHJ,IAGaxB,KAAKW,MAAME,KAExB,OACE,yBACEN,UAAWP,KAAKC,MAAMoB,OAASb,EAAoBA,EACnDiB,QAASzB,KAFX,UAGES,MAAO,CACLG,MADK,EAELF,OAFK,EAGLc,OAHK,EAILE,WACE1B,KAAKW,MAAMO,OAASlB,KAAKC,MAAzB,OACID,KAAKW,MADT,MAEI,gB,EAjCVS,CAAaD,IAAMQ,WC7DVC,G,MAJH,WACV,OAAO,kBAAC,EAAD,CAAgBf,KAAM,IAAKnB,OAAQ,CAAC,MAAO,SAAU,OAAQ,QAASC,OAAQ,OCAvFkC,IAASvB,OAAO,kBAAC,EAAD,MAASwB,SAASC,eAAe,W","file":"static/js/main.af5e6cb5.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './styles.css'\n\nconst choice = (choices) => choices[Math.floor(Math.random() * choices.length)]\n\nconst generateSeq = (choices, length) =>\n  [...Array(length)].map((i) => choice(choices))\n\nexport class CardMemoryGame extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let colors = this.props.colors\n    let number = this.props.number\n\n    this.state = {\n      colors: generateSeq(colors, number),\n      isSelected: false,\n      lastSelected: 0,\n      solved: []\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n    this.areSameColor = this.areSameColor.bind(this)\n  }\n\n  areSameColor(first, second) {\n    return this.state.colors[first] == this.state.colors[second]\n  }\n\n  handleClick(cardIndex) {\n    if (\n      this.state.isSelected &&\n      this.areSameColor(this.state.lastSelected, cardIndex)\n    ) {\n      this.setState((prevState) => ({\n        solved: prevState.solved.concat([prevState.lastSelected, cardIndex])\n      }))\n    }\n\n    this.setState((prevState) => ({\n      isSelected: !prevState.isSelected,\n      lastSelected: cardIndex\n    }))\n  }\n\n  render() {\n    return (\n      <div\n        className={styles.game}\n        style={{ height: this.props.size, width: this.props.size }}\n      >\n        {this.state.colors.map((color, index) => (\n          <Card\n            color={color}\n            key={index}\n            index={index}\n            size={this.props.size / Math.sqrt(this.props.number)}\n            shown={\n              this.state.solved.includes(index) ||\n              (this.state.isSelected && this.state.lastSelected == index)\n            }\n            handleClick={this.handleClick}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { tapped: false }\n\n    this.startFlip = this.startFlip.bind(this)\n  }\n\n  startFlip() {\n    this.setState({ tapped: true })\n    setTimeout(() => {\n      this.setState({ tapped: false })\n      this.props.handleClick(this.props.index)\n    }, 1500)\n  }\n\n  render() {\n    let marginCoeff = 0.07\n\n    let size = this.props.size * (1 - 2 * marginCoeff)\n    let margin = this.props.size * marginCoeff\n\n    return (\n      <div\n        className={this.state.tapped ? styles.tappedCard : styles.card}\n        onClick={this.startFlip}\n        style={{\n          width: size,\n          height: size,\n          margin: margin,\n          background:\n            this.props.shown || this.state.tapped\n              ? this.props.color\n              : 'lightblue'\n        }}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nimport { CardMemoryGame } from 'card-memory-react'\nimport 'card-memory-react/dist/index.css'\n\nconst App = () => {\n  return <CardMemoryGame size={360} colors={['red', 'yellow', 'pink', 'blue']} number={49} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}